/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import entities.DBStruct;
import java.awt.event.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import sql.Connector;
import util.MesDial;
import util.StrVal;

/**
 *
 * @author Alex Hughes <alexhughes117@gmail.com>
 */
public class ServerFrame extends GUI {

    private static boolean instanceAlive = false;
    private Connector c;
    private DBStruct dbs;
    private int hostID = -1;
    private GUI previousFrame;

    /**
     * Constructor for new server
     *
     * @param aConnector
     * @param aDbs
     * @param aPreviousFrame
     */
    public ServerFrame(Connector aConnector, DBStruct aDbs, GUI aPreviousFrame) {
        c = aConnector;
        dbs = aDbs;
        instanceAlive = true;
        previousFrame = aPreviousFrame;

        initComponents();
        this.addWindowListener(new WindowAdapter() {

            public void windowClosing(WindowEvent e) {
                close();
            }
        });

        this.setTitle("New Host");
        idL.setText("");
        this.setVisible(true);
        super.setFrameLocationCenter(this);
    }

    /**
     * Constructor for editing existing server
     *
     * @param aConnector
     * @param aDbs
     * @param aHostID
     * @param aPreviousFrame
     */
    public ServerFrame(Connector aConnector, DBStruct aDbs, int aHostID, GUI aPreviousFrame) {
        c = aConnector;
        dbs = aDbs;
        hostID = aHostID;
        instanceAlive = true;
        previousFrame = aPreviousFrame;

        initComponents();
        this.addWindowListener(new WindowAdapter() {

            public void windowClosing(WindowEvent e) {
                close();
            }
        });
        try {
            loadServer();
        } catch (SQLException ex) {
            MesDial.conError(this);
            Logger.getLogger(ServerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.setTitle("Existing Host");
        idL.setText(Integer.toString(hostID));
        this.setVisible(true);
        super.setFrameLocationCenter(this);
    }

    private void close() {
        instanceAlive = false;
        if (previousFrame instanceof SendFrame) {
            ((SendFrame) previousFrame).loadServers();
        }
        this.dispose();
    }

    private void loadServer() throws SQLException {
        ResultSet serverR = c.sendQuery(""
                + "SELECT * "
                + "FROM " + dbs.getServerT()
                + " WHERE " + dbs.getHostIDF() + " = " + hostID);

        while (serverR.next()) {
            idL.setText(Integer.toString(serverR.getInt(1)));
            hostF.setText(serverR.getString(dbs.getHostF()));
            userF.setText(serverR.getString(dbs.getUserF()));
            passF.setText(serverR.getString(dbs.getPassF()));
            typeF.setText(serverR.getString(dbs.getTypeF()));
        }
    }

    public void commit() {
        try {
            if (hostID == -1) {
                ResultSet keyR = c.sendUpdate(""
                        + "INSERT INTO `" + dbs.getServerT() + "` (`" + dbs.getHostF() + "`) "
                        + "VALUES ('" + hostF.getText() + "') ");

                while (keyR.next()) {
                    hostID = keyR.getInt(1);
                }
            }
            c.sendUpdate(""
                    + "UPDATE " + dbs.getServerT() + " SET " + dbs.getHostF() + " = '"
                    + StrVal.sntS(hostF.getText()) + "', " + dbs.getUserF() + " = '" + StrVal.sntS(userF.getText()) + "', "
                    + dbs.getPassF() + " = '" + StrVal.sntS(new String(passF.getPassword())) + "', "
                    + dbs.getTypeF() + " = '" + StrVal.sntS(StrVal.sntS(typeF.getText())) + "' "
                    + "WHERE " + dbs.getHostIDF() + " = " + hostID);

            if (!Connector.AUTOCOMMIT) {
                c.commit();
            }
            MesDial.saveSuccess(this);
            close();
        } catch (SQLException x) {
            Logger.getLogger(SendFrame.class.getName()).log(Level.SEVERE, null, x);
            MesDial.conError(this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        hostF = new javax.swing.JTextField();
        userF = new javax.swing.JTextField();
        typeF = new javax.swing.JTextField();
        passF = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Server ID:");

        idL.setText("null");

        jLabel2.setText("Host:");

        jLabel3.setText("User:");

        jLabel4.setText("Type:");

        jLabel5.setText("Pass:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idL)
                    .addComponent(hostF)
                    .addComponent(userF)
                    .addComponent(typeF)
                    .addComponent(passF, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hostF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(userF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(passF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(typeF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        commit();
    }//GEN-LAST:event_okBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        close();
    }//GEN-LAST:event_cancelBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField hostF;
    private javax.swing.JLabel idL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton okBtn;
    private javax.swing.JPasswordField passF;
    private javax.swing.JTextField typeF;
    private javax.swing.JTextField userF;
    // End of variables declaration//GEN-END:variables

    public static boolean isInstanceAlive() {
        return instanceAlive;
    }
}
